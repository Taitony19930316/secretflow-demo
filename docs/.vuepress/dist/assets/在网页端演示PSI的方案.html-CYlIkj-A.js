import{_ as s,c as a,a as t,o as p}from"./app-rbwDE6nc.js";const e={};function l(c,n){return p(),a("div",null,[...n[0]||(n[0]=[t(`<h1 id="在网页端演示-psi-的可行方案" tabindex="-1"><a class="header-anchor" href="#在网页端演示-psi-的可行方案"><span>在网页端演示 PSI 的可行方案</span></a></h1><h2 id="🎯-你的需求" tabindex="-1"><a class="header-anchor" href="#🎯-你的需求"><span>🎯 你的需求</span></a></h2><ol><li>✅ 想用真正的隐语 PSI（SecretFlow）</li><li>✅ 想在网页端演示</li><li>✅ 根据 Day2 计划：嵌入到 VuePress 网站</li></ol><hr><h2 id="❌-问题-真正的隐语无法直接在浏览器运行" tabindex="-1"><a class="header-anchor" href="#❌-问题-真正的隐语无法直接在浏览器运行"><span>❌ 问题：真正的隐语无法直接在浏览器运行</span></a></h2><h3 id="为什么不行" tabindex="-1"><a class="header-anchor" href="#为什么不行"><span>为什么不行？</span></a></h3><table><thead><tr><th>需求</th><th>隐语 PSI</th><th>浏览器</th></tr></thead><tbody><tr><td><strong>运行环境</strong></td><td>Python</td><td>JavaScript</td></tr><tr><td><strong>依赖</strong></td><td>Ray、gRPC、密码学库</td><td>只能用 JS 库</td></tr><tr><td><strong>多节点</strong></td><td>需要多台机器</td><td>单个浏览器</td></tr><tr><td><strong>内存</strong></td><td>可以用 GB</td><td>受限（几百 MB）</td></tr></tbody></table><p><strong>结论</strong>：隐语 PSI 无法直接在浏览器运行 ❌</p><hr><h2 id="✅-可行方案对比" tabindex="-1"><a class="header-anchor" href="#✅-可行方案对比"><span>✅ 可行方案对比</span></a></h2><h3 id="方案对比表" tabindex="-1"><a class="header-anchor" href="#方案对比表"><span>方案对比表</span></a></h3><table><thead><tr><th>方案</th><th>交互性</th><th>真实性</th><th>难度</th><th>时间</th><th>推荐度</th></tr></thead><tbody><tr><td><strong>A. 嵌入 Google Colab</strong></td><td>⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐</td><td>5分钟</td><td>⭐⭐⭐⭐</td></tr><tr><td><strong>B. JavaScript 简化版</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐</td><td>2小时</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td><strong>C. Python 后端 + 前端</strong></td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>1天</td><td>⭐⭐⭐</td></tr><tr><td><strong>D. WebAssembly</strong></td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>3天</td><td>⭐</td></tr></tbody></table><hr><h2 id="🚀-方案-a-嵌入-google-colab-最快" tabindex="-1"><a class="header-anchor" href="#🚀-方案-a-嵌入-google-colab-最快"><span>🚀 方案 A：嵌入 Google Colab（最快）</span></a></h2><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><ul><li>✅ 5 分钟完成</li><li>✅ 可以用真正的 Python/隐语</li><li>✅ 用户可以运行代码</li><li>✅ 免费</li></ul><h3 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h3><ul><li>❌ 需要跳转到 Colab</li><li>❌ 交互性一般</li><li>❌ 用户需要 Google 账号</li></ul><h3 id="实现方式" tabindex="-1"><a class="header-anchor" href="#实现方式"><span>实现方式</span></a></h3><h4 id="在-vuepress-中嵌入" tabindex="-1"><a class="header-anchor" href="#在-vuepress-中嵌入"><span>在 VuePress 中嵌入</span></a></h4><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token comment">&lt;!-- docs/tech/README.md --&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token title important"><span class="token punctuation">##</span> PSI 在线演示</span></span>
<span class="line"></span>
<span class="line"><span class="token title important"><span class="token punctuation">###</span> 方式1：在 Google Colab 中运行</span></span>
<span class="line"></span>
<span class="line">点击下方按钮，在 Google Colab 中运行完整的 PSI 代码：</span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>你的Colab链接<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://colab.research.google.com/assets/colab-badge.svg<span class="token punctuation">&quot;</span></span> </span>
<span class="line">       <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Open In Colab<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token bold"><span class="token punctuation">**</span><span class="token content">操作步骤</span><span class="token punctuation">**</span></span>：</span>
<span class="line"><span class="token list punctuation">1.</span> 点击上方按钮打开 Colab</span>
<span class="line"><span class="token list punctuation">2.</span> 点击 Runtime → Run all</span>
<span class="line"><span class="token list punctuation">3.</span> 查看输出结果（交集：[1002, 1003]）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🎨-方案-b-javascript-简化版-推荐-⭐⭐⭐⭐⭐" tabindex="-1"><a class="header-anchor" href="#🎨-方案-b-javascript-简化版-推荐-⭐⭐⭐⭐⭐"><span>🎨 方案 B：JavaScript 简化版（推荐 ⭐⭐⭐⭐⭐）</span></a></h2><h3 id="优点-1" tabindex="-1"><a class="header-anchor" href="#优点-1"><span>优点</span></a></h3><ul><li>✅ 完全在网页运行（不需要跳转）</li><li>✅ 交互性最好（实时修改数据）</li><li>✅ 不需要后端服务器</li><li>✅ 加载快</li></ul><h3 id="缺点-1" tabindex="-1"><a class="header-anchor" href="#缺点-1"><span>缺点</span></a></h3><ul><li>❌ 不是真正的隐语（是简化版）</li><li>❌ 需要写 JS 代码</li></ul><h3 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示"><span>效果展示</span></a></h3><p><strong>用户体验</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">┌─────────────────────────────────────────┐</span>
<span class="line">│  PSI 隐私求交演示                       │</span>
<span class="line">├─────────────────────────────────────────┤</span>
<span class="line">│  医院 A 的患者 ID：                     │</span>
<span class="line">│  [1001] [1002] [1003] [1005] [+添加]    │</span>
<span class="line">│                                         │</span>
<span class="line">│  医院 B 的患者 ID：                     │</span>
<span class="line">│  [1002] [1003] [1004] [+添加]           │</span>
<span class="line">│                                         │</span>
<span class="line">│       [计算隐私交集]  按钮               │</span>
<span class="line">│                                         │</span>
<span class="line">│  结果：                                 │</span>
<span class="line">│  共同患者 ID: [1002, 1003]              │</span>
<span class="line">│  共同患者数量: 2                        │</span>
<span class="line">│                                         │</span>
<span class="line">│  🔒 双方数据未明文传输                  │</span>
<span class="line">└─────────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码"><span>实现代码</span></a></h3><p>我可以帮你写一个完整的 JavaScript PSI 演示：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token comment">&lt;!-- docs/tech/README.md --&gt;</span></span>
<span class="line"></span>
<span class="line">## PSI 在线演示</span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>psi-demo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hospital-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>医院 A 的患者 ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hospital-a<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1001,1002,1003,1005,1007<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hospital-input<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>医院 B 的患者 ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hospital-b<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1002,1003,1004,1006,1008<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">runPSI</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>🔒 计算隐私交集<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>✅ PSI 计算结果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>intersection<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>🔒 双方数据在加密状态下计算，未明文传输<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token comment">// JavaScript PSI 实现</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sha256</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> msgBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> hashBuffer <span class="token operator">=</span> <span class="token keyword">await</span> crypto<span class="token punctuation">.</span>subtle<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;SHA-256&#39;</span><span class="token punctuation">,</span> msgBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> hashArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>hashBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> hashArray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">b</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">runPSI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 获取输入</span></span>
<span class="line">  <span class="token keyword">const</span> hospitalA <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hospital-a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> hospitalB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hospital-b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 哈希加密</span></span>
<span class="line">  <span class="token keyword">const</span> hashedA <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span></span>
<span class="line">    hospitalA<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token function">sha256</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> hashedB <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span></span>
<span class="line">    hospitalB<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">id</span> <span class="token operator">=&gt;</span> <span class="token function">sha256</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 计算交集</span></span>
<span class="line">  <span class="token keyword">const</span> intersection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hospitalA<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>hashedB<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>hashedA<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      intersection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>hospitalA<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 显示结果</span></span>
<span class="line">  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;block&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;intersection&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> </span>
<span class="line">    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;strong&gt;共同患者 ID：&lt;/strong&gt; [</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>intersection<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> </span>
<span class="line">    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;strong&gt;共同患者数量：&lt;/strong&gt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>intersection<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"><span class="token selector">#psi-demo</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #42b983<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.hospital-input</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 15px 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.hospital-input input</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> #42b983<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 12px 24px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">button:hover</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> #359268<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">#result</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">background</span><span class="token punctuation">:</span> #f3f4f5<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🏗️-方案-c-python-后端-前端-最完整" tabindex="-1"><a class="header-anchor" href="#🏗️-方案-c-python-后端-前端-最完整"><span>🏗️ 方案 C：Python 后端 + 前端（最完整）</span></a></h2><h3 id="架构" tabindex="-1"><a class="header-anchor" href="#架构"><span>架构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">用户浏览器</span>
<span class="line">    ↓ AJAX 请求</span>
<span class="line">VuePress 前端（展示界面）</span>
<span class="line">    ↓ HTTP API</span>
<span class="line">Python 后端（Flask/FastAPI）</span>
<span class="line">    ↓</span>
<span class="line">真正的 SecretFlow PSI</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优点-2" tabindex="-1"><a class="header-anchor" href="#优点-2"><span>优点</span></a></h3><ul><li>✅ 可以用真正的隐语</li><li>✅ 交互性好</li><li>✅ 用户不需要跳转</li></ul><h3 id="缺点-2" tabindex="-1"><a class="header-anchor" href="#缺点-2"><span>缺点</span></a></h3><ul><li>❌ 需要部署后端服务器</li><li>❌ 需要配置 CORS</li><li>❌ 开发时间长（1天）</li></ul><h3 id="实现概要" tabindex="-1"><a class="header-anchor" href="#实现概要"><span>实现概要</span></a></h3><h4 id="后端-flask" tabindex="-1"><a class="header-anchor" href="#后端-flask"><span>后端（Flask）</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># backend/psi_api.py</span></span>
<span class="line"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify</span>
<span class="line"><span class="token keyword">from</span> flask_cors <span class="token keyword">import</span> CORS</span>
<span class="line"><span class="token keyword">import</span> secretflow <span class="token keyword">as</span> sf</span>
<span class="line"></span>
<span class="line">app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span></span>
<span class="line">CORS<span class="token punctuation">(</span>app<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/api/psi&#39;</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">calculate_psi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    data <span class="token operator">=</span> request<span class="token punctuation">.</span>json</span>
<span class="line">    hospital_a <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;hospital_a&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    hospital_b <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;hospital_b&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 这里调用真正的 SecretFlow PSI</span></span>
<span class="line">    <span class="token comment"># 由于需要多节点，实际上还是用简化版</span></span>
<span class="line">    intersection <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>hospital_a<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token builtin">set</span><span class="token punctuation">(</span>hospital_b<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;intersection&#39;</span><span class="token punctuation">:</span> intersection<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>intersection<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="前端-vuepress" tabindex="-1"><a class="header-anchor" href="#前端-vuepress"><span>前端（VuePress）</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// docs/.vuepress/components/PSIDemo.vue</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">runPSI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:5000/api/psi&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">hospital_a</span><span class="token operator">:</span> hospitalA<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">hospital_b</span><span class="token operator">:</span> hospitalB</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">showResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🔬-方案-d-webassembly-最复杂" tabindex="-1"><a class="header-anchor" href="#🔬-方案-d-webassembly-最复杂"><span>🔬 方案 D：WebAssembly（最复杂）</span></a></h2><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h3><p>把 Python/C++ 编译成 WebAssembly，在浏览器运行</p><h3 id="优点-3" tabindex="-1"><a class="header-anchor" href="#优点-3"><span>优点</span></a></h3><ul><li>✅ 可以运行接近原生的代码</li><li>✅ 性能好</li></ul><h3 id="缺点-3" tabindex="-1"><a class="header-anchor" href="#缺点-3"><span>缺点</span></a></h3><ul><li>❌ 非常复杂（需要 3 天）</li><li>❌ 隐语不支持 WebAssembly</li><li>❌ 调试困难</li></ul><p><strong>结论</strong>：不推荐（超出 7 天计划）</p><hr><h2 id="🎯-针对你的需求推荐" tabindex="-1"><a class="header-anchor" href="#🎯-针对你的需求推荐"><span>🎯 针对你的需求推荐</span></a></h2><h3 id="day1-4-目标-从你的计划" tabindex="-1"><a class="header-anchor" href="#day1-4-目标-从你的计划"><span>Day1-4 目标（从你的计划）</span></a></h3><blockquote><p><strong>Day2 下午</strong>：嵌入 CodeSandbox 代码（2h）</p><ul><li>在 VuePress 页面中插入代码</li><li>测试本地访问：点击&quot;Run&quot;确认能输出交集</li><li>加操作说明</li></ul></blockquote><h3 id="推荐方案-b-javascript-版-a-colab-链接" tabindex="-1"><a class="header-anchor" href="#推荐方案-b-javascript-版-a-colab-链接"><span>推荐方案：B（JavaScript 版）+ A（Colab 链接）</span></a></h3><p><strong>组合策略</strong>：</p><ol><li><p><strong>主展示</strong>：用 JavaScript 版（方案 B）</p><ul><li>用户可以直接在网页上交互</li><li>修改数据实时看到结果</li><li>加载快，体验好</li></ul></li><li><p><strong>深入了解</strong>：提供 Colab 链接（方案 A）</p><ul><li>&quot;想了解真正的隐语实现？点击这里&quot;</li><li>用户可以看到完整代码</li></ul></li></ol><p><strong>页面布局</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">┌────────────────────────────────────┐</span>
<span class="line">│  PSI 技术原理                       │</span>
<span class="line">│  - 什么是 PSI                       │</span>
<span class="line">│  - 核心技术（OT、椭圆曲线）          │</span>
<span class="line">└────────────────────────────────────┘</span>
<span class="line">          ↓</span>
<span class="line">┌────────────────────────────────────┐</span>
<span class="line">│  🎮 在线交互演示（JavaScript）      │</span>
<span class="line">│  [输入医院A数据] [输入医院B数据]     │</span>
<span class="line">│  [计算交集按钮]                     │</span>
<span class="line">│  [显示结果]                         │</span>
<span class="line">└────────────────────────────────────┘</span>
<span class="line">          ↓</span>
<span class="line">┌────────────────────────────────────┐</span>
<span class="line">│  📚 深入学习                        │</span>
<span class="line">│  想了解真正的 SecretFlow 实现？      │</span>
<span class="line">│  [Open in Colab 按钮]               │</span>
<span class="line">└────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="💻-立即实现-javascript-psi-demo" tabindex="-1"><a class="header-anchor" href="#💻-立即实现-javascript-psi-demo"><span>💻 立即实现：JavaScript PSI Demo</span></a></h2><h3 id="我帮你准备好了完整代码" tabindex="-1"><a class="header-anchor" href="#我帮你准备好了完整代码"><span>我帮你准备好了完整代码</span></a></h3><h4 id="第1步-创建-vue-组件" tabindex="-1"><a class="header-anchor" href="#第1步-创建-vue-组件"><span>第1步：创建 Vue 组件</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">cd</span> /Users/tailunyu/Desktop/sf/secretflow-demo</span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> docs/.vuepress/components</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第2步-创建-psidemo-vue" tabindex="-1"><a class="header-anchor" href="#第2步-创建-psidemo-vue"><span>第2步：创建 PSIDemo.vue</span></a></h4><p>我可以帮你创建一个完整的交互式 PSI 演示组件，包含：</p><ul><li>✅ 输入框（可修改数据）</li><li>✅ 计算按钮</li><li>✅ 动画效果</li><li>✅ 结果展示</li><li>✅ 代码说明</li></ul><h4 id="第3步-在-tech-readme-md-中使用" tabindex="-1"><a class="header-anchor" href="#第3步-在-tech-readme-md-中使用"><span>第3步：在 tech/README.md 中使用</span></a></h4><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md"><pre><code class="language-markdown"><span class="line"><span class="token title important"><span class="token punctuation">##</span> PSI 在线演示</span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PSIDemo</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token title important"><span class="token punctuation">###</span> 技术说明</span></span>
<span class="line">上方演示使用 Web Crypto API 实现简化版 PSI，展示核心原理。</span>
<span class="line">生产环境需要使用完整的 SecretFlow ECDH-PSI 协议。</span>
<span class="line"></span>
<span class="line"><span class="token url">[<span class="token content">在 Google Colab 中查看完整实现</span>](<span class="token url">你的Colab链接</span>)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="⏱️-时间成本对比" tabindex="-1"><a class="header-anchor" href="#⏱️-时间成本对比"><span>⏱️ 时间成本对比</span></a></h2><table><thead><tr><th>方案</th><th>Day2 用时</th><th>效果</th><th>维护成本</th></tr></thead><tbody><tr><td><strong>仅 Colab 链接</strong></td><td>5 分钟</td><td>⭐⭐</td><td>低</td></tr><tr><td><strong>JavaScript 版</strong></td><td>2 小时</td><td>⭐⭐⭐⭐⭐</td><td>低</td></tr><tr><td><strong>Python 后端</strong></td><td>1 天</td><td>⭐⭐⭐⭐</td><td>高</td></tr><tr><td><strong>两者结合</strong></td><td>2 小时</td><td>⭐⭐⭐⭐⭐</td><td>低</td></tr></tbody></table><hr><h2 id="🎯-我的建议" tabindex="-1"><a class="header-anchor" href="#🎯-我的建议"><span>🎯 我的建议</span></a></h2><h3 id="最佳方案-javascript-版-colab-链接" tabindex="-1"><a class="header-anchor" href="#最佳方案-javascript-版-colab-链接"><span>最佳方案：JavaScript 版 + Colab 链接</span></a></h3><p><strong>Day2 时间分配</strong>：</p><ul><li>上午（2h）：写 PSI 原理文档 ✅</li><li>下午（2h）： <ul><li>1h：实现 JavaScript PSI 演示</li><li>0.5h：嵌入 Colab 链接</li><li>0.5h：测试和调整样式</li></ul></li></ul><p><strong>交付物</strong>：</p><ol><li>✅ 可在网页直接交互的 PSI 演示</li><li>✅ 提供 Colab 链接了解完整实现</li><li>✅ 满足&quot;交互式拆解站&quot;的需求</li><li>✅ 符合时间要求（Day2 完成）</li></ol><hr><h2 id="🚀-立即开始" tabindex="-1"><a class="header-anchor" href="#🚀-立即开始"><span>🚀 立即开始</span></a></h2><h3 id="需要我帮你做什么" tabindex="-1"><a class="header-anchor" href="#需要我帮你做什么"><span>需要我帮你做什么？</span></a></h3><p><strong>选项 1</strong>：我帮你写完整的 JavaScript PSI 演示组件</p><ul><li>包含交互界面</li><li>动画效果</li><li>代码高亮</li><li>响应式设计</li></ul><p><strong>选项 2</strong>：我帮你准备 Colab 笔记本</p><ul><li>包含真正的隐语代码（如果环境支持）</li><li>或简化版但有详细注释</li></ul><p><strong>选项 3</strong>：两者都做！</p><hr><h2 id="📊-方案总结" tabindex="-1"><a class="header-anchor" href="#📊-方案总结"><span>📊 方案总结</span></a></h2><table><thead><tr><th>需求</th><th>方案 A (Colab)</th><th>方案 B (JS)</th><th>推荐：两者结合</th></tr></thead><tbody><tr><td><strong>在网页运行</strong></td><td>❌ 跳转</td><td>✅</td><td>✅</td></tr><tr><td><strong>真正的隐语</strong></td><td>✅</td><td>❌</td><td>✅ (Colab)</td></tr><tr><td><strong>交互性</strong></td><td>⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td><strong>开发时间</strong></td><td>5分钟</td><td>2小时</td><td>2小时</td></tr><tr><td><strong>符合Day2计划</strong></td><td>✅</td><td>✅</td><td>✅</td></tr></tbody></table><hr><p><strong>你想用哪个方案？我现在就可以帮你实现！</strong> 🚀</p>`,97)])])}const o=s(e,[["render",l]]),u=JSON.parse('{"path":"/devlog/tech-principles/%E5%9C%A8%E7%BD%91%E9%A1%B5%E7%AB%AF%E6%BC%94%E7%A4%BAPSI%E7%9A%84%E6%96%B9%E6%A1%88.html","title":"在网页端演示 PSI 的可行方案","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761803161000,"contributors":[{"name":"tailunyu","username":"tailunyu","email":"tailunyu@example.com","commits":1,"url":"https://github.com/tailunyu"}],"changelog":[{"hash":"6ef86c47225087bdb49e72347ae00f4edeae475d","time":1761803161000,"email":"tailunyu@example.com","author":"tailunyu","message":"扩展开发手记：添加技术原理、部署指南、问题解决、开发总结四大分类（移除敏感信息）"}]},"filePathRelative":"devlog/tech-principles/在网页端演示PSI的方案.md"}');export{o as comp,u as data};
