import{_ as s,c as a,a as t,o as e}from"./app-9uM4mQSi.js";const p={};function l(i,n){return e(),a("div",null,[...n[0]||(n[0]=[t(`<h1 id="psi-技术原理" tabindex="-1"><a class="header-anchor" href="#psi-技术原理"><span>PSI 技术原理</span></a></h1><p>隐私求交（Private Set Intersection，PSI）是隐私计算的基础技术之一。</p><h2 id="psi-是什么" tabindex="-1"><a class="header-anchor" href="#psi-是什么"><span>PSI 是什么？</span></a></h2><p>PSI 允许多方在不泄露各自数据的情况下，计算出数据集的交集。</p><p><strong>核心特点</strong>：</p><ul><li>数据可用不可见</li><li>只有交集结果被披露</li><li>原始数据保持加密状态</li></ul><h2 id="隐语-psi-的核心技术" tabindex="-1"><a class="header-anchor" href="#隐语-psi-的核心技术"><span>隐语 PSI 的核心技术</span></a></h2><p>隐语（SecretFlow）采用 <strong>OT（Oblivious Transfer）协议</strong> 实现 PSI：</p><ol><li><strong>数据加密</strong>：双方对各自数据进行加密</li><li><strong>安全交互</strong>：通过密码学协议交换信息</li><li><strong>求交计算</strong>：在密文状态下计算交集</li><li><strong>结果输出</strong>：仅输出交集，不泄露其他数据</li></ol><h2 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h2><h3 id="医疗领域" tabindex="-1"><a class="header-anchor" href="#医疗领域"><span>医疗领域</span></a></h3><ul><li><strong>场景</strong>：多家医院联合研究，需要找出共同患者</li><li><strong>问题</strong>：患者隐私保护法规严格，不能直接共享数据</li><li><strong>解决</strong>：使用 PSI 在加密状态下对齐患者 ID</li></ul><h3 id="金融领域" tabindex="-1"><a class="header-anchor" href="#金融领域"><span>金融领域</span></a></h3><ul><li><strong>场景</strong>：银行之间共享黑名单</li><li><strong>问题</strong>：客户信息敏感，不能明文传输</li><li><strong>解决</strong>：使用 PSI 比对黑名单，只获取交集</li></ul><h2 id="代码演示" tabindex="-1"><a class="header-anchor" href="#代码演示"><span>代码演示</span></a></h2><div class="hint-container tip"><p class="hint-container-title">交互式演示</p><p>下方的代码可以直接运行，查看 PSI 的实际效果。</p></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token comment"># PSI 演示代码（简化版）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 医院A的患者ID</span></span>
<span class="line">hospital_a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">1003</span><span class="token punctuation">,</span> <span class="token number">1005</span><span class="token punctuation">,</span> <span class="token number">1008</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 医院B的患者ID  </span></span>
<span class="line">hospital_b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">1003</span><span class="token punctuation">,</span> <span class="token number">1004</span><span class="token punctuation">,</span> <span class="token number">1007</span><span class="token punctuation">,</span> <span class="token number">1008</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用隐语进行隐私求交</span></span>
<span class="line">intersection <span class="token operator">=</span> psi<span class="token punctuation">(</span>hospital_a<span class="token punctuation">,</span> hospital_b<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出：[1002, 1003, 1008]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;共同患者: </span><span class="token interpolation"><span class="token punctuation">{</span>intersection<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>操作说明</strong>：点击 Run 按钮，查看两家医院 ID 的隐私求交结果，数据未明文传输。</p><h2 id="技术优势" tabindex="-1"><a class="header-anchor" href="#技术优势"><span>技术优势</span></a></h2><table><thead><tr><th>特性</th><th>传统方法</th><th>隐语 PSI</th></tr></thead><tbody><tr><td>数据传输</td><td>明文</td><td>密文</td></tr><tr><td>隐私保护</td><td>❌ 无</td><td>✅ 强</td></tr><tr><td>合规性</td><td>❌ 低</td><td>✅ 高</td></tr><tr><td>性能</td><td>快</td><td>较快</td></tr></tbody></table><h2 id="了解更多" tabindex="-1"><a class="header-anchor" href="#了解更多"><span>了解更多</span></a></h2><ul><li><a href="https://www.secretflow.org.cn/docs/secretflow/latest/zh-CN/quickstart/psi" target="_blank" rel="noopener noreferrer">隐语官方文档</a></li><li><a href="#">PSI 技术白皮书</a></li></ul><hr><p><em>本页面展示了 PSI 技术的基本原理，更多技术细节请参考官方文档。</em></p>`,24)])])}const c=s(p,[["render",l]]),r=JSON.parse('{"path":"/tech/","title":"PSI 技术原理","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761745547000,"contributors":[{"name":"tailunyu","username":"tailunyu","email":"tailunyu@example.com","commits":1,"url":"https://github.com/tailunyu"}],"changelog":[{"hash":"8e6f257fc21dca7260a98c510770b7e7b48cd667","time":1761745547000,"email":"tailunyu@example.com","author":"tailunyu","message":"初始提交：隐语交互式拆解站"}]},"filePathRelative":"tech/README.md"}');export{c as comp,r as data};
